Author: Sven Joachim <svenjoac@gmx.de>
Description: Fix for CVE-2017-16879 in the _nc_write_entry function
 Fix for CVE-2017-16879 cherry-picked from upstream patchlevel
 20171125.
Bug-Debian: https://bugs.debian.org/882620
Forwarded: not-needed
Last-Update: 2017-11-27

---
 ncurses/tinfo/write_entry.c |   11 ++++++++++-
 1 file changed, 10 insertions(+), 1 deletion(-)

--- a/ncurses/tinfo/write_entry.c
+++ b/ncurses/tinfo/write_entry.c
@@ -267,6 +267,9 @@ _nc_write_entry(TERMTYPE *const tp)
 #endif
 #endif /* USE_SYMLINKS */
 
+    unsigned limit2 = sizeof(filename) - (2 + LEAF_LEN);
+    char saved = '\0';
+
     static int call_count;
     static time_t start_time;	/* time at start of writes */
 
@@ -365,12 +368,18 @@ _nc_write_entry(TERMTYPE *const tp)
 	start_time = 0;
     }
 
-    if (strlen(first_name) >= sizeof(filename) - (2 + LEAF_LEN))
+    if (strlen(first_name) >= sizeof(filename) - (2 + LEAF_LEN)) {
 	_nc_warning("terminal name too long.");
+	saved = first_name[limit2];
+	first_name[limit2] = '\0';
+    }
 
     _nc_SPRINTF(filename, _nc_SLIMIT(sizeof(filename))
 		LEAF_FMT "/%s", first_name[0], first_name);
 
+    if (saved)
+	first_name[limit2] = saved;
+
     /*
      * Has this primary name been written since the first call to
      * write_entry()?  If so, the newer write will step on the older,
