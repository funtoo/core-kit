#!/sbin/openrc-run
# Copyright 1999-2013 Gentoo Foundation
# Distributed under the terms of the GNU General Public License v2

command="${DOCKERD_BINARY:-/usr/bin/dockerd}"
pidfile="${DOCKER_PIDFILE:-/run/${RC_SVCNAME}.pid}"
command_args="-p \"${pidfile}\" ${DOCKER_OPTS}"
DOCKER_LOGFILE="${DOCKER_LOGFILE:-/var/log/${RC_SVCNAME}.log}"
DOCKER_ERRFILE="${DOCKER_ERRFILE:-${DOCKER_LOGFILE}}"
DOCKER_OUTFILE="${DOCKER_OUTFILE:-${DOCKER_LOGFILE}}"
start_stop_daemon_args="--background \
	--stderr \"${DOCKER_ERRFILE}\" --stdout \"${DOCKER_OUTFILE}\""

if [ -n "$DOCKER_HTTP_PROXY" ] ; then
start_stop_daemon_args="${start_stop_daemon_args} \
	--env \"HTTP_PROXY=${DOCKER_HTTP_PROXY}\""
fi

if [ -n "$DOCKER_HTTPS_PROXY" ] ; then
start_stop_daemon_args="${start_stop_daemon_args} \
	--env \"HTTPS_PROXY=${DOCKER_HTTPS_PROXY}\""
fi

if [ -n "$DOCKER_NO_PROXY" ] ; then
start_stop_daemon_args="${start_stop_daemon_args} \
	--env \"NO_PROXY=${DOCKER_NO_PROXY}\""
fi

extra_started_commands="reload"

rc_ulimit="${DOCKER_ULIMIT:--c unlimited -n 1048576 -u unlimited}"

retry="${DOCKER_RETRY:-TERM/60/KILL/10}"

depend() {
	need containerd
}

start_pre() {
	checkpath -f -m 0644 -o root:docker "$DOCKER_LOGFILE"
}

reload() {
	ebegin "Reloading ${RC_SVCNAME}"
	start-stop-daemon --signal HUP --pidfile "${pidfile}"
	eend $? "Failed to stop ${RC_SVCNAME}"
}
