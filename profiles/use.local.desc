# This file is deprecated as per GLEP 56 in favor of metadata.xml. Please add
# your descriptions to your package's metadata.xml ONLY.
# * generated automatically using egencache *

app-arch/gzip:pic - disable optimized assembly code that is not PIC friendly
app-arch/libarchive:bzip2 - Allow accessing bzip2-compressed archives through libbz2 (which comes with app-arch/bzip2). This only affects libarchive's native support: bsdtar will keep using bunzip2 as a filter if that's not built-in.
app-arch/libarchive:e2fsprogs - Use file flags from sys-fs/e2fsprogs headers instead of virtual/os-headers headers
app-arch/libarchive:lz4 - Enable support for LZ4 compression using app-arch/lz4
app-arch/libarchive:nettle - Use dev-libs/nettle as crypto backend
app-arch/libarchive:zlib - Allow accessing gzip-compressed archives through sys-libs/zlib. This only affects libarchive's native support: bsdtar will keep using gunzip as a filter if that's not built-in. It's also needed for supporting extraction of ZIP files.
app-arch/lz4:valgrind - Enable usage of dev-util/valgrind in tests
app-arch/tar:minimal - just install `tar`
app-arch/unzip:natspec - Use dev-libs/libnatspec to correctly decode non-ascii file names archived in Windows.
app-crypt/gnupg:mta - Build mta support using virtual/mta.
app-crypt/gnupg:smartcard - Build scdaemon software. Enables usage of OpenPGP cards. For other type of smartcards, try app-crypt/gnupg-pkcs11-scd. Bring in dev-libs/libusb as a dependency; enable scdaemon.
app-crypt/gnupg:tofu - Enable support for Trust of First use trust model; requires dev-db/sqlite.
app-crypt/gnupg:tools - Install extra tools (including gpgsplit and gpg-zip).
app-crypt/gnupg:usb - Build direct CCID access for scdaemon; requires dev-libs/libusb.
app-crypt/gnupg:wks-server - Install the wks-server
app-doc/doxygen:clang - support for sys-devel/clang assisted parsing
app-doc/doxygen:dot - allow to create dot graphs using media-gfx/graphviz
app-doc/doxygen:doxysearch - build doxyindexer and doxysearch.cgi
app-editors/nano:debug - Enable debug messages and assert warnings. Note that these will all be sent straight to stderr rather than some logging facility.
app-editors/nano:justify - Enable justify/unjustify functions for text formatting.
app-editors/nano:magic - Add magic file support (sys-apps/file) to automatically detect appropriate syntax highlighting
app-editors/nano:minimal - Disable all fancy features, including ones that otherwise have a dedicated USE flag (such as spelling).
app-eselect/eselect-php:fpm - Enable the FastCGI Process Manager SAPI
app-misc/ca-certificates:cacert - Include root certs from CAcert (http://www.cacert.org/) and Software in the Public Interest (http://www.spi-inc.org/)
app-misc/ca-certificates:insecure_certs - Install certs which are known to *not* being trustworthy.
app-misc/pax-utils:python - Install a more powerful/faster version of lddtree
app-misc/screen:multiuser - Enable multiuser support (by setting correct permissions)
app-misc/screen:nethack - Express error messages in nethack style
app-misc/screen:utmp - Include utmp support
app-misc/tmux:utempter - Include libutempter support
app-shells/bash:bashlogger - Log ALL commands typed into bash; should ONLY be used in restricted environments such as honeypots
app-shells/bash:mem-scramble - Build with custom malloc/free overwriting allocated/freed memory
app-shells/bash:net - Enable /dev/tcp/host/port redirection
app-shells/bash:plugins - Add support for loading builtins at runtime via 'enable'
app-text/docbook-xsl-stylesheets:ruby - Install the Ruby-based dbtoepub script; requires an interpreter compatible with app-eselect/eselect-ruby.
dev-db/sqlite:secure-delete - Enable overwriting of deleted content with zeros by default (http://sqlite.org/pragma.html#pragma_secure_delete), causing some performance penalty
dev-db/sqlite:tools - Install additional tools
dev-libs/boost:context - Build and install the Boost.Context (and Boost.Fiber) library and all other Boost libraries that depend on it
dev-libs/boost:debug - Build and install only the debug version of the Boost libraries. Only enable this flag if you're developing against boost.
dev-libs/boost:doc - Install the full API documentation documentation. This takes over 200MB of extra disk space.
dev-libs/boost:nls - Build libboost_locale. This library requires compatible C library interfaces, which might not be provided by uClibc or other embedded libraries.
dev-libs/boost:threads - Build multi-thread-compatible libraries instead of single-threaded only.
dev-libs/boost:tools - Build and install the boost tools (bcp, quickbook, inspect, wave)
dev-libs/check:subunit - Enable support for the subunit unit test protocol
dev-libs/elfutils:lzma - Support automatic decompression of LZMA-compressed files and kernel images
dev-libs/elfutils:threads - Build the libraries with thread safe support
dev-libs/elfutils:utils - Install command-line utilities (all the eu-* programs)
dev-libs/gmp:asm - Enable use of hand optimized assembly routines (faster execution)
dev-libs/gmp:pgo - After building gmp, run some tests against to produce faster libraries -- this option will double the compile time
dev-libs/libevent:debug - Support runtime debug mode and malloc hooks (for programmers)
dev-libs/libffi:pax_kernel - Use PaX emulated trampolines, for we can't use PROT_EXEC
dev-libs/libgpg-error:common-lisp - Install common-lisp files
dev-libs/libpcre:bzip2 - Add support for pcregrep command to search within bzip2-compressed files (via app-arch/bzip2).
dev-libs/libpcre:pcre16 - Build PCRE library for 16 bit characters (e.g. UTF-16).
dev-libs/libpcre:pcre32 - Build PCRE library for 32 bit characters (e.g. UTF-32).
dev-libs/libpcre:readline - Add support for command line editing to pcretest, through sys-libs/readline.
dev-libs/libpcre:recursion-limit - Limit match recursion to 8192; if disabled, the default limit is used, which is the same as the match limit.
dev-libs/libpcre:zlib - Add support for pcregrep command to search within gzip-compressed files (via sys-libs/zlib).
dev-libs/openssl:asm - Support assembly hand optimized crypto functions (i.e. faster run time)
dev-libs/openssl:bindist - Disable EC algorithms (as they seem to be patented) -- note: changes the ABI
dev-libs/openssl:rfc3779 - Enable support for RFC 3779 (X.509 Extensions for IP Addresses and AS Identifiers)
dev-libs/openssl:sslv2 - Support for the old/insecure SSLv2 protocol -- note: not required for TLS/https
dev-libs/openssl:sslv3 - Support for the old/insecure SSLv3 protocol -- note: not required for TLS/https
dev-libs/openssl:tls-heartbeat - Enable the Heartbeat Extension in TLS and DTLS
dev-util/cmake:system-jsoncpp - Use system copy of dev-libs/jsoncpp instead of bundled one.
dev-util/ctags:ada - Enable Ada support
dev-util/ctags:json - Enable JSON output support
dev-util/ctags:xml - Enable XML parsing support
dev-util/ctags:yaml - Enable YAML parsing support
dev-util/pkgconf:pkg-config - Install as a replacement for dev-util/pkgconfig
dev-util/pkgconf:strict - Adhere to POSIX pkg-config specification. Useful for finding uses of non-standard pkg-config invocations
dev-vcs/git:blksha1 - Use the new optimized SHA1 implementation
dev-vcs/git:cgi - Install gitweb too
dev-vcs/git:curl - Support fetching and pushing (requires webdav too) over http:// and https:// protocols
dev-vcs/git:gpg - Pull in gnupg for signing -- without gnupg, attempts at signing will fail at runtime!
dev-vcs/git:gtk - Include the gitview contrib tool
dev-vcs/git:highlight - GitWeb support for app-text/highlight
dev-vcs/git:libsecret - Enable libsecret support to store login credentials
dev-vcs/git:mediawiki - Support pulling and pushing from MediaWiki
dev-vcs/git:mediawiki-experimental - Add experimental patches for improved MediaWiki support
dev-vcs/git:ppcsha1 - Make use of a bundled routine that is optimized for the PPC arch
dev-vcs/git:subversion - Include git-svn for dev-vcs/subversion support
dev-vcs/git:tk - Include the 'gitk' and 'git gui' tools
dev-vcs/git:webdav - Adds support for push'ing to HTTP/HTTPS repositories via DAV
mail-mta/postfix:dovecot-sasl - Enable net-mail/dovecot protocol version 1 (server only) SASL implementation
mail-mta/postfix:eai - Add support for SMTPUTF8
mail-mta/postfix:ldap-bind - Add support for binding to LDAP backend using dev-libs/cyrus-sasl
mail-mta/postfix:lmdb - Add support for using dev-db/lmdb for lookup tables
mail-mta/postfix:memcached - Add support for using net-misc/memcached for lookup tables
mail-mta/postfix:vda - Add support for virtual delivery agent quota enforcing
net-dns/avahi:autoipd - Build and install the IPv4LL (RFC3927) network address configuration daemon
net-dns/avahi:bookmarks - Install the avahi-bookmarks application (requires dev-python/twisted-core and dev-python/twisted-web)
net-dns/avahi:gtk3 - Build the avahi-ui-gtk3 library, and use gtk3 for the avahi utilities under USE=utils
net-dns/avahi:howl-compat - Enable compat libraries for howl
net-dns/avahi:mdnsresponder-compat - Enable compat libraries for mDNSResponder
net-dns/avahi:utils - Install the avahi gtk+ utils avahi-discover, bssh, and bvnc
net-firewall/ebtables:perl - Install the ebtables-save script which uses perl
net-firewall/iptables:conntrack - Build against net-libs/libnetfilter_conntrack when enables the connlabel matcher
net-firewall/iptables:netlink - Build against libnfnetlink which enables the nfnl_osf util
net-firewall/iptables:nftables - Support nftables kernel interface
net-firewall/iptables:pcap - Build against net-libs/libpcap which enables the nfbpf_compile util
net-misc/curl:http2 - Enabled HTTP/2.0 support
net-misc/curl:metalink - Enable metalink support
net-misc/curl:rtmp - Enable RTMP Streaming Media support
net-misc/curl:ssh - Enabled SSH urls in curl using libssh2
net-misc/curl:ssl - Enable crypto engine support (via openssl if USE='-gnutls -nss')
net-misc/dhcpcd:embedded - Embed the definitions of dhcp options in the dhcpcd executable
net-misc/iputils:SECURITY_HAZARD - Allow non-root users to flood (ping -f). This is generally a very bad idea.
net-misc/iputils:arping - Build and install arping -- tool for sending ARP requests to peers (see also net-analyzer/arping)
net-misc/iputils:clockdiff - Build and install clockdiff -- tool for comparing clocks via ICMP packets
net-misc/iputils:gcrypt - Use dev-libs/libgcrypt for md5 support
net-misc/iputils:nettle - Use dev-libs/nettle for md5 support
net-misc/iputils:openssl - Use dev-libs/openssl for md5 support
net-misc/iputils:rarpd - Build and install rarpd -- server for handling RARP (reverse ARP) requests; generally only used by old systems
net-misc/iputils:rdisc - Build and install rdisc -- server for the client side of the ICMP router discover protocol
net-misc/iputils:tftpd - Build and install tftpd -- server for the Trivial File Transfer Protocol (see also net-ftp/tftp-hpa)
net-misc/iputils:tracepath - Build and install tracepath -- tool for tracing network paths for discovering MTU values
net-misc/iputils:traceroute - Build and install traceroute -- tool for tracing network paths (see also net-analyzer/traceroute)
net-misc/ntp:openntpd - Allow ntp to be installed alongside openntpd
net-misc/ntp:parse-clocks - Add support for PARSE clocks
net-misc/ntp:samba - Provide support for Samba's signing daemon (needed for Active Directory domain controllers)
net-misc/openntpd:libressl - Enable HTTPS TLS time constraint support using dev-libs/libressl
net-misc/openssh:X509 - Adds support for X.509 certificate authentication
net-misc/openssh:bindist - Disable EC/RC5 algorithms in OpenSSL for patent reasons.
net-misc/openssh:hpn - Enable high performance ssh
net-misc/openssh:ldap - Add support for storing SSH public keys in LDAP
net-misc/openssh:ldns - Use LDNS for DNSSEC/SSHFP validation.
net-misc/openssh:livecd - Enable root password logins for live-cd environment.
net-misc/openssh:ssh1 - Support the legacy/weak SSH1 protocol
net-misc/openssh:ssl - Enable additional crypto algorithms via OpenSSL
net-misc/rsync:stunnel - Provide helper scripts for using rsync via >=net-misc/stunnel-4
net-misc/wget:ntlm - Enable support for NTLM (Windows-based) authorization
net-misc/wget:uuid - Generate UUIDs for the WARC (Web ARChive file format) using libuuid; otherwise use a simple RNG (random number generator)
sys-apps/busybox:make-symlinks - Create all the appropriate symlinks in /bin and /sbin.
sys-apps/busybox:math - Enable math support in gawk (requires libm)
sys-apps/busybox:mdev - Create the appropriate symlink in /sbin and install mdev.conf and support files
sys-apps/busybox:sep-usr - Support a separate /usr without needing an initramfs by booting with init=/ginit
sys-apps/busybox:static - Make the system rescue shell (/bin/bb) static so you can recover even when glibc is broken
sys-apps/busybox:systemd - Support systemd
sys-apps/coreutils:hostname - Build the hostname program
sys-apps/coreutils:kill - Build the kill program
sys-apps/coreutils:multicall - Build all tools into a single `coreutils` program akin to busybox to save space
sys-apps/gawk:mpfr - use mpfr for high precision arithmetic (-M / --bignum)
sys-apps/hwids:net - Install the oui.txt and iab.txt databases
sys-apps/hwids:pci - Install the pci.ids database
sys-apps/hwids:udev - Install hwdb.d rules for udev
sys-apps/hwids:usb - Install the usb.ids database
sys-apps/iproute2:berkdb - build programs that use berkdb (just arpd)
sys-apps/iproute2:iptables - include support for iptables filtering
sys-apps/iproute2:minimal - only install ip and tc programs
sys-apps/kmod:lzma - Enable support for XZ compressed modules
sys-apps/kmod:tools - Install module loading/unloading tools.
sys-apps/kmod:zlib - Enable support for gzipped modules
sys-apps/man-db:manpager - Enable manpager wrapper for colorizing output
sys-apps/net-tools:arp - build the arp and rarp tools (for manipulating the ARP cache)
sys-apps/net-tools:hostname - build the hostname and dnsdomainname tools
sys-apps/net-tools:old-output - use old ifconfig output style (useful for when new output breaks scripts)
sys-apps/net-tools:plipconfig - build the plipconfig tool (for working with old PLIP hardware)
sys-apps/net-tools:slattach - build the slattach tool (for working with old serial ports)
sys-apps/openrc:netifrc - enable Gentoo's network stack (net.* scripts)
sys-apps/openrc:newnet - enable the new network stack (experimental)
sys-apps/openrc:tools - build optional tools
sys-apps/pciutils:dns - Enable support for querying the central database of PCI IDs using DNS
sys-apps/pciutils:kmod - Enable sys-apps/kmod support for the -k switch in lspci command
sys-apps/pciutils:zlib - Support compressed pci.ids database
sys-apps/portage:epydoc - Build html API documentation with epydoc.
sys-apps/portage:ipc - Use inter-process communication between portage and running ebuilds.
sys-apps/portage:native-extensions - Compiles native "C" extensions (speedups, instead of using python backup code). Currently includes libc-locales. This should only be temporarily disabled for some bootstrapping operations. Cross-compilation is not supported.
sys-apps/portage:xattr - Preserve extended attributes (filesystem-stored metadata) when installing files. Usually only required for hardened systems.
sys-apps/util-linux:caps - build setpriv helper (run programs with diff capabilities)
sys-apps/util-linux:cramfs - build mkfs/fsck helpers for cramfs filesystems
sys-apps/util-linux:fdformat - build fdformat (floppy disk format)
sys-apps/util-linux:kill - build the kill program
sys-apps/util-linux:pam - build runuser helper
sys-apps/util-linux:suid - install mount/umount as setuid so non-root users may mount/umount devices, and wall/write as setgid so non-root users can notify other users
sys-apps/util-linux:tty-helpers - install the mesg/wall/write tools for talking to local users
sys-auth/pambase:consolekit - Enable pam_ck_connector module on local system logins. This allows for console logins to make use of ConsoleKit authorization.
sys-auth/pambase:cracklib - Enable pam_cracklib module on system authentication stack. This produces warnings when changing password to something easily crackable. It requires the same USE flag to be enabled on sys-libs/pam or system login might be impossible.
sys-auth/pambase:debug - Enable debug information logging on syslog(3) for all the modules supporting this in the system authentication and system login stacks.
sys-auth/pambase:gnome-keyring - Enable pam_gnome_keyring module on system login stack. This enables proper Gnome Keyring access to logins, whether they are done with the login shell, a Desktop Manager or a remote login systems such as SSH.
sys-auth/pambase:minimal - Disables the standard PAM modules that provide extra information to users on login; this includes pam_tally (and pam_tally2 for Linux PAM 1.1 and later), pam_lastlog, pam_motd and other similar modules. This might not be a good idea on a multi-user system but could reduce slightly the overhead on single-user non-networked systems.
sys-auth/pambase:mktemp - Enable pam_mktemp module on system auth stack for session handling. This module creates a private temporary directory for the user, and sets TMP and TMPDIR accordingly.
sys-auth/pambase:nullok - Enable the nullok option with the pam_unix module. This allows people to login with blank passwords.
sys-auth/pambase:pam_krb5 - Enable pam_krb5 module on system auth stack, as an alternative to pam_unix. If Kerberos authentication succeed, only pam_unix will be ignore, and all the other modules will proceed as usual, including Gnome Keyring and other session modules. It requires sys-libs/pam as PAM implementation.
sys-auth/pambase:pam_ssh - Enable pam_ssh module on system auth stack for authentication and session handling. This module will accept as password the passphrase of a private SSH key (one of ~/.ssh/id_rsa, ~/.ssh/id_dsa or ~/.ssh/identity), and will spawn an ssh-agent instance to cache the open key.
sys-auth/pambase:passwdqc - Enable pam_passwdqc module on system auth stack for password quality validation. This is an alternative to pam_cracklib producing warnings, rejecting or providing example passwords when changing your system password. It is used by default by OpenWall GNU/*/Linux and by FreeBSD.
sys-auth/pambase:securetty - Enable pam_securetty module in the login stack. Not generally relevant anymore as the login stack only refers to local logins and local terminals imply secure access in the first place.
sys-auth/pambase:sha512 - Switch Linux-PAM's pam_unix module to use sha512 for passwords hashes rather than MD5. This option requires sys-libs/pam version 1.0.1 built against sys-libs/glibc version 2.7, if it's built against an earlier version, it will silently be ignored, and MD5 hashes will be used. All the passwords changed after this USE flag is enabled will be saved to the shadow file hashed using SHA512 function. The password previously saved will be left untouched. Please note that while SHA512-hashed passwords will still be recognised if the USE flag is removed, the shadow file will not be compatible with systems using an earlier glibc version.
sys-auth/pambase:systemd - Use pam_systemd module to register user sessions in the systemd control group hierarchy.
sys-boot/grub:device-mapper - Enable support for device-mapper from sys-fs/lvm2
sys-boot/grub:efiemu - Build and install the efiemu runtimes
sys-boot/grub:fonts - Build and install fonts for the gfxterm module
sys-boot/grub:libzfs - Enable support for sys-fs/zfs
sys-boot/grub:mount - Build and install the grub-mount utility
sys-boot/grub:multislot - Allow concurrent installation of sys-boot/grub SLOT 0 and sys-boot/grub SLOT 2 by renaming all programs.
sys-boot/grub:themes - Build and install GRUB themes (starfield)
sys-boot/grub:truetype - Build and install grub-mkfont conversion utility
sys-devel/autogen:libopts - install the libopts tarball (a few packages want this for developing)
sys-devel/binutils:multitarget - Adds support to binutils for cross compiling (does not work with gas)
sys-devel/gcc:awt - Useful only when building GCJ, this enables Abstract Window Toolkit (AWT) peer support on top of GTK+
sys-devel/gcc:cilk - Support the Cilk Plus language (C/C++ based languages for parallel programming)
sys-devel/gcc:d - Enable support for the D programming language
sys-devel/gcc:fixed-point - Enable fixed-point arithmetic support for MIPS targets in gcc (Warning: significantly increases compile time!)
sys-devel/gcc:go - Build the GCC Go language frontend.
sys-devel/gcc:graphite - Add support for the framework for loop optimizations based on a polyhedral intermediate representation
sys-devel/gcc:jit - Enable libgccjit so other applications can embed gcc for Just-In-Time compilation. This will slow down the compiler a bit as it forces all of the toolchain to be shared libs.
sys-devel/gcc:libssp - Build SSP support into a dedicated library rather than use the code in the C library (DO NOT ENABLE THIS IF YOU DON'T KNOW WHAT IT DOES)
sys-devel/gcc:mpx - Enable support for Intel Memory Protection Extensions (MPX)
sys-devel/gcc:mudflap - Add support for mudflap, a pointer use checking library
sys-devel/gcc:nopie - Disable PIE support (NOT FOR GENERAL USE)
sys-devel/gcc:nossp - Disable SSP support (NOT FOR GENERAL USE)
sys-devel/gcc:objc - Build support for the Objective C code language
sys-devel/gcc:objc++ - Build support for the Objective C++ language
sys-devel/gcc:objc-gc - Build support for the Objective C code language Garbage Collector
sys-devel/gcc:regression-test - Run the testsuite and install the results (requires FEATURES=test)
sys-devel/gcc:sanitize - Build support for various sanitizer functions (ASAN/TSAN/etc...)
sys-devel/gcc:ssp - Build packages with stack smashing protector on by default
sys-devel/gcc:vtv - Build support for virtual table verification (a C++ hardening feature)
sys-devel/gettext:cvs - When running `autopoint`, use cvs to store the internal development files; this requires cvs at runtime, but will be faster/smaller than raw archives
sys-devel/gettext:git - When running `autopoint`, use git to store the internal development files; this requires git at runtime, but will be faster/smaller than raw archives
sys-devel/llvm:clang - Build the clang C/C++ compiler
sys-devel/llvm:default-compiler-rt - Use compiler-rt instead of libgcc as the default rtlib for clang
sys-devel/llvm:default-libcxx - Use libc++ instead of libstdc++ as the default stdlib for clang
sys-devel/llvm:doc - Build and install the HTML documentation and regenerate the man pages
sys-devel/llvm:gold - Build the gold linker plugin
sys-devel/llvm:lldb - Build the lldb debugger
sys-devel/llvm:multitarget - Build all host targets (default: host only)
sys-devel/llvm:ncurses - Support querying terminal properties using ncurses' terminfo
sys-devel/llvm:sanitize - Build compiler-rt's sanitizers
sys-devel/llvm:static-analyzer - Install the Clang static analyzer (requires USE=clang)
sys-firmware/amdgpu-ucode:legacy - Install firmware for older chipsets which are optionally supported by AMDGPU
sys-firmware/intel-microcode:initramfs - install a small initramfs for use with CONFIG_MICROCODE_EARLY
sys-firmware/intel-microcode:monolithic - install the large text microcode.dat (used by older kernels via microcode_ctl)
sys-firmware/intel-microcode:split-ucode - install the split binary ucode files (used by the kernel directly)
sys-firmware/ipxe:efi - Build an EFI program for using PXE
sys-firmware/ipxe:iso - Build a bootable ISO for using PXE
sys-firmware/ipxe:lkrn - Build a linux kernel bootable file for using with grub/etc...
sys-firmware/ipxe:qemu - Build the required PXE ROM images for app-emulation/qemu
sys-firmware/ipxe:undi - Build a Universal Network Device Interface driver chainloading your existing PXE NIC into iPXE
sys-firmware/ipxe:usb - Build a bootable USB image for using PXE
sys-firmware/ipxe:vmware - Build the PXE ROM images that VMWare uses
sys-firmware/seabios:binary - Use official upstream pre-built binaries
sys-firmware/seabios:seavgabios - Include SeaVGABIOS binaries (replacement for vgabios)
sys-firmware/sigrok-firmware-fx2lafw:binary - Use official upstream pre-built binaries
sys-firmware/vgabios:binary - Use official upstream pre-built binaries (only default and cirrus images)
sys-fs/aufs3:debug - Enable additional debugging support
sys-fs/aufs3:fuse - Enable fuse support
sys-fs/aufs3:hfs - Enable hfs support
sys-fs/aufs3:inotify - Enable inotify support
sys-fs/aufs3:kernel-patch - Patch the current kernel for aufs3 support
sys-fs/aufs3:nfs - Enable support for nfs export
sys-fs/aufs3:pax_kernel - Apply patch needed for pax enabled kernels
sys-fs/aufs3:ramfs - Enable initramfs/rootfs support
sys-fs/aufs4:debug - Enable additional debugging support
sys-fs/aufs4:fuse - Enable fuse support
sys-fs/aufs4:hfs - Enable hfs support
sys-fs/aufs4:inotify - Enable inotify support
sys-fs/aufs4:kernel-patch - Patch the current kernel for aufs3 support
sys-fs/aufs4:nfs - Enable support for nfs export
sys-fs/aufs4:pax_kernel - Apply patch needed for pax enabled kernels
sys-fs/aufs4:ramfs - Enable initramfs/rootfs support
sys-fs/btrfs-progs:convert - Build ext2 conversion utility (btrfs-convert)
sys-fs/btrfs-progs:static - Build static binaries in addition to the dynamic ones
sys-fs/cryptsetup:gcrypt - Use dev-libs/libgcrypt crypto backend
sys-fs/cryptsetup:kernel - Use kernel crypto backend (mainly for embedded systems)
sys-fs/cryptsetup:nettle - Use dev-libs/nettle crypto backend
sys-fs/cryptsetup:openssl - Use dev-libs/openssl crypto backend
sys-fs/cryptsetup:pwquality - Use dev-libs/libpwquality for password quality checking
sys-fs/cryptsetup:reencrypt - Build cryptsetup-reencrypt
sys-fs/cryptsetup:urandom - Use /dev/urandom instead of /dev/random
sys-fs/dmraid:dietlibc - Compile against dev-libs/dietlibc
sys-fs/dmraid:intel_led - Enable Intel LED support
sys-fs/dmraid:klibc - Compile against dev-libs/klibc
sys-fs/dmraid:led - Enable LED support
sys-fs/dmraid:mini - Create a minimal binary suitable for early boot environments
sys-fs/dosfstools:compat - Install symlinks for legacy names of the tools
sys-fs/e2fsprogs:fuse - Build fuse2fs, a FUSE file system client for ext2/ext3/ext4 file systems
sys-fs/eudev:blkid - enable blkid support
sys-fs/eudev:efi - enable EFI support
sys-fs/eudev:gudev - enable libudev gobject interface
sys-fs/eudev:hwdb - read vendor/device string database and add it to udev database
sys-fs/eudev:keymap - map custom hardware's multimedia keys
sys-fs/eudev:kmod - enable module loading through libkmod
sys-fs/eudev:modutils - enable module loading support - use modutils calls if kmod not enabled
sys-fs/eudev:openrc - install the OpenRC init scripts
sys-fs/eudev:rule-generator - install legacy rule generator rules and support scripts - note that the functionality within was dropped from sys-fs/udev as it is not stable in all cases; use at your own risk
sys-fs/eudev:smack - enable SMACK security model
sys-fs/lvm2:clvm - Allow users to build clustered lvm2
sys-fs/lvm2:cman - Cman support for clustered lvm
sys-fs/lvm2:corosync - Corosync support for clustered lvm
sys-fs/lvm2:device-mapper-only - Build only device-mapper and not the rest of LVM2 (UNSUPPORTED)
sys-fs/lvm2:lvm1 - Allow users to build lvm2 with lvm1 support
sys-fs/lvm2:lvm2create_initrd - Install lvm2create_initrd script and pull in sys-apps/makedev for the /sbin/MAKEDEV command
sys-fs/lvm2:openais - Openais support for clustered lvm
sys-fs/lvm2:sanlock - Enable lvmlockd with support for sanlock
sys-fs/lvm2:thin - Support for thin volumes
sys-fs/zfs:kernel-builtin - Disable dependency on sys-fs/zfs-kmod under the assumption that ZFS is part of the kernel source tree
sys-fs/zfs:rootfs - Enable dependencies required for booting off a pool containing a rootfs
sys-fs/zfs:test-suite - Install regression test suite
sys-kernel/genkernel:crypt - Obsolete USE flag. Use cryptsetup for LUKS support. (bug ##414523)
sys-kernel/genkernel:cryptsetup - Enable support for Luks disk encryption using sys-fs/cryptsetup
sys-kernel/genkernel:firmware - Prefer system firmware sys-kernel/linux-firmware over local copy.
sys-libs/db:rpc - Enable rpc client/server
sys-libs/gdbm:berkdb - enable compatibility layer for UNIX-like dbm and ndbm interfaces
sys-libs/gdbm:exporter - enable gdbmexport binary for exporting data from gdbm-1.8 databases into gdbm-1.9
sys-libs/glibc:debug - When USE=hardened, allow fortify/stack violations to dump core (SIGABRT) and not kill self (SIGKILL)
sys-libs/glibc:gd - build memusage and memusagestat tools
sys-libs/glibc:nscd - Build, and enable support for, the Name Service Cache Daemon
sys-libs/glibc:rpc - Enable obsolete RPC/NIS layers (disabling is experimental -- see bug 381391)
sys-libs/glibc:suid - Make internal pt_chown helper setuid -- not needed if using Linux and have /dev/pts mounted with gid=5
sys-libs/glibc:systemtap - enable systemtap static probe points
sys-libs/ncurses:ada - Add bindings for the ADA programming language
sys-libs/ncurses:tinfo - Build curses library (libncurses) sep from the low-level terminfo library (libtinfo) -- usually needed only for binary packages -- but it is binary compatible in either mode
sys-libs/ncurses:trace - Enable test trace() support in ncurses calls
sys-libs/pam:berkdb - Build the pam_userdb module, that allows to authenticate users against a Berkeley DB file. Please note that enabling this USE flag will create a PAM module that links to the Berkeley DB (as provided by sys-libs/db) installed in /usr/lib and will thus not work for boot-critical services authentication.
sys-libs/pam:cracklib - Build the pam_cracklib module, that allows to verify the chosen passwords' strength through the use of sys-libs/cracklib. Please note that simply enabling the USE flag on this package will not make use of pam_cracklib by default, you should also enable it in sys-auth/pambase as well as update your configuration files.
sys-libs/readline:utils - Install rlfe (ReadLine Front-End) helper tool -- a wrapper program for making any stdin use readline
sys-libs/timezone-data:leaps_timezone - Install the set of "right" timezones; these timezones include leap seconds when counting seconds since the epoch (while POSIX does not) as they are based on the TAI (International Atomic Time) clock
sys-libs/zlib:minizip - include the minizip library for quick and dirty zip extraction
sys-process/fcron:debug - Enable debug code and output. Since version 3.0.5 this will no longer force foreground execution, and fcron will be able to run as a service properly.
sys-process/fcron:mta - Enable mta support for sending emails from fcron
sys-process/fcron:pam - Enable PAM support for fcron. This means that fcron will pass through the "fcron" stack before executing the jobs, and fcrontab will use the "fcrontab" stack to authenticate the user before editing its crontab file.
sys-process/fcron:system-crontab - Set up fcron to respect /etc/crontab and /etc/cron.d. If this flag is disabled, /etc/cron.d and /etc/crontab will be ignored, but /etc/cron.{hourly,daily,weekly,monthly} will still be respected.
sys-process/htop:oom - Add column to track the OOM-killer score of processes
sys-process/htop:openvz - Enable openvz support
sys-process/htop:vserver - Enable vserver support
sys-process/procps:kill - Build the kill program
sys-process/procps:modern-top - Enables new startup defaults of top. Keeps old defaults if disabled
sys-process/procps:ncurses - Build programs that use ncurses: top, slabtop, watch
virtual/linux-sources:firmware - Install linux kernel firmware
virtual/ssh:minimal - Prefer net-misc/dropbear over net-misc/openssh
